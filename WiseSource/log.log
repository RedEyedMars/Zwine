general.ruleset>>
NEWLINE:$\n
NEWLINE:$\n
IMPORT_RULE:
	rule:
		definition:
			choice:
				definition:
					chain:
						atom:
							terminal:
								listsToken:
									LISTNAME:MINUSEQUALS
					choice:
						PIPE:|
						definition:
							choice:
								definition:
									chain:
										atom:
											terminal:
												listsToken:
													LISTNAME:MINUS
									choice:
										PIPE:|
										definition:
											choice:
												PIPE:|
												definition:
													choice:
														PIPE:|
														definition:
															choice:
																PIPE:|
																definition:
																	choice:
																		PIPE:|
																		definition:
																			chain:
																				atom:
																					terminal:
																						listsToken:
																							LISTNAME:ORDINAL
																			choice:
																				definition:
																					chain:
																						atom:
																							terminal:
																								listsToken:
																									LISTNAME:EQUALSIGN
																					choice:
																				PIPE:|
																	chain:
																		atom:
																			terminal:
																				listsToken:
																					LISTNAME:NOTEQUALS
															chain:
																atom:
																	terminal:
																		listsToken:
																			LISTNAME:EQUALS
													chain:
														atom:
															terminal:
																listsToken:
																	LISTNAME:MULTIPLY
											chain:
												atom:
													terminal:
														listsToken:
															LISTNAME:DIVIDE
								PIPE:|
							chain:
								atom:
									terminal:
										listsToken:
											LISTNAME:PLUS
				PIPE:|
			chain:
				atom:
					terminal:
						listsToken:
							LISTNAME:PLUSEQUALS
		rulename:
			NAME:operator
		NEWLINE:$\n
		TAB:	
	rule:
		NEWLINE:$\n
		definition:
			choice:
				TAB:	
				NEWLINE:$\n
				definition:
					choice:
					chain:
						atom:
							braced:
								definition:
									chain:
										atom:
											multiple:
												definition:
													choice:
													chain:
														atom:
															terminal:
																listsToken:
																	LISTNAME:NEWLINE
												option:
													MANY:*
										atom:
											terminal:
												listsToken:
													LISTNAME:statement
										atom:
											terminal:
												listsToken:
													LISTNAME:FOR
										atom:
											terminal:
												listsToken:
													LISTNAME:variable_header
										atom:
											terminal:
												listsToken:
													LISTNAME:ORDINAL
									choice:
							parameters:
								name:
									NAME:fromVariable
								AS:as 
						atom:
							terminal:
								listsToken:
									LISTNAME:BODY
			chain:
				atom:
					terminal:
						listsToken:
							LISTNAME:BODY
				atom:
					braced:
						definition:
							chain:
								atom:
									multiple:
										definition:
											chain:
												atom:
													terminal:
														listsToken:
															LISTNAME:NEWLINE
											choice:
										option:
											MANY:*
								atom:
									terminal:
										listsToken:
											LISTNAME:FOR
								atom:
									terminal:
										listsToken:
											LISTNAME:COLON
								atom:
									terminal:
										listsToken:
											LISTNAME:statement
								atom:
									terminal:
										listsToken:
											LISTNAME:variable_header
							choice:
					parameters:
						AS:as 
						name:
							NAME:fromList
		TAB:	
		rulename:
			NAME:for_statement
	rule:
		rulename:
			NAME:while_statement
		TAB:	
		definition:
			choice:
			chain:
				atom:
					terminal:
						listsToken:
							LISTNAME:statement
				atom:
					terminal:
						listsToken:
							LISTNAME:WHILE
				atom:
					terminal:
						listsToken:
							LISTNAME:BODY
				atom:
					multiple:
						definition:
							choice:
							chain:
								atom:
									terminal:
										listsToken:
											LISTNAME:NEWLINE
						option:
							MANY:*
		NEWLINE:$\n
	NEWLINE:$\n
	NEWLINE:$\n
	comment:#GENERAL$\n
	NEWLINE:$\n
	NEWLINE:$\n
	NEWLINE:$\n
	NEWLINE:$\n
	NEWLINE:$\n
	NEWLINE:$\n
	NEWLINE:$\n
	rule:
		NEWLINE:$\n
		TAB:	
		rulename:
			NAME:method
		definition:
			chain:
				atom:
					terminal:
						listsToken:
							LISTNAME:type_name
				atom:
					terminal:
						listsToken:
							LISTNAME:METHOD_ARGUMENTS
				atom:
					terminal:
						listsToken:
							LISTNAME:NEW
			choice:
				NEWLINE:$\n
				TAB:	
				definition:
					choice:
					chain:
						atom:
							terminal:
								listsToken:
									LISTNAME:METHOD_ARGUMENTS
						atom:
							parameters:
								name:
									NAME:methodName
								AS:as 
							terminal:
								listsToken:
									LISTNAME:NAME
	rule:
		TAB:	
		rulename:
			NAME:type_name
		NEWLINE:$\n
		definition:
			choice:
			chain:
				atom:
					multiple:
						option:
							MANY:*
						definition:
							chain:
								atom:
									braced:
										definition:
											chain:
												atom:
													terminal:
														listsToken:
															LISTNAME:DOT
												atom:
													terminal:
														listsToken:
															LISTNAME:NAME
													parameters:
														AS:as 
														name:
															NAME:typeName
											choice:
							choice:
				atom:
					parameters:
						AS:as 
						name:
							NAME:typeName
					terminal:
						listsToken:
							LISTNAME:NAME
	NEWLINE:$\n
	NEWLINE:$\n
	rule:
		rulename:
			NAME:boolean_element
		definition:
			choice:
				TAB:	
				definition:
					chain:
						atom:
							terminal:
								listsToken:
									LISTNAME:statement
					choice:
				NEWLINE:$\n
			chain:
				atom:
					terminal:
						listsToken:
							LISTNAME:has_chance
		TAB:	
		silence:
			SILENCE:is silent
		NEWLINE:$\n
	rule:
		rulename:
			NAME:if_statement
		TAB:	
		definition:
			chain:
				atom:
					terminal:
						listsToken:
							LISTNAME:BODY
				atom:
					multiple:
						option:
							MANY:*
						definition:
							choice:
							chain:
								atom:
									terminal:
										listsToken:
											LISTNAME:NEWLINE
				atom:
					multiple:
						definition:
							choice:
							chain:
								atom:
									braced:
										definition:
											chain:
												atom:
													braced:
														definition:
															chain:
																atom:
																	terminal:
																		listsToken:
																			LISTNAME:BODY
															choice:
																PIPE:|
																definition:
																	choice:
																	chain:
																		atom:
																			terminal:
																				listsToken:
																					LISTNAME:IF
																		atom:
																			terminal:
																				listsToken:
																					LISTNAME:BODY
																		atom:
																			terminal:
																				listsToken:
																					LISTNAME:boolean_statement
																		atom:
																			multiple:
																				option:
																					MANY:*
																				definition:
																					choice:
																					chain:
																						atom:
																							terminal:
																								listsToken:
																									LISTNAME:NEWLINE
												atom:
													multiple:
														definition:
															chain:
																atom:
																	terminal:
																		listsToken:
																			LISTNAME:NEWLINE
															choice:
														option:
															MANY:*
												atom:
													multiple:
														option:
															MANY:*
														definition:
															chain:
																atom:
																	terminal:
																		listsToken:
																			LISTNAME:NEWLINE
															choice:
												atom:
													terminal:
														listsToken:
															LISTNAME:ELSE
											choice:
									parameters:
										name:
											NAME:else_statement
										AS:as 
						option:
							MANY:*
				atom:
					terminal:
						listsToken:
							LISTNAME:boolean_statement
				atom:
					terminal:
						listsToken:
							LISTNAME:IF
			choice:
		NEWLINE:$\n
	NEWLINE:$\n
	rule:
		NEWLINE:$\n
		rulename:
			NAME:boolean_statement
		definition:
			choice:
			chain:
				atom:
					multiple:
						definition:
							choice:
							chain:
								atom:
									braced:
										definition:
											choice:
											chain:
												atom:
													terminal:
														listsToken:
															LISTNAME:boolean_element
												atom:
													parameters:
														AS:as 
														name:
															NAME:operator
													braced:
														definition:
															choice:
																PIPE:|
																definition:
																	choice:
																	chain:
																		atom:
																			terminal:
																				listsToken:
																					LISTNAME:OR
															chain:
																atom:
																	terminal:
																		listsToken:
																			LISTNAME:AND
						option:
							MANY:*
				atom:
					terminal:
						listsToken:
							LISTNAME:boolean_element
		TAB:	
	list_rule:
		list_def:
			parameters:
				AS:as 
				name:
					NAME:WILD
			regex:
				WILD:.*
		NEWLINE:$\n
		TAB:	
		list_def:
			quote:
				WILD:if
			parameters:
				AS:as 
				name:
					NAME:IF
		TAB:	
		NEWLINE:$\n
		list_def:
			parameters:
				AS:as 
				name:
					NAME:STATIC_ACCESS
			quote:
				WILD:=>
		TAB:	
		list_def:
			quote:
				WILD:<-
			parameters:
				AS:as 
				name:
					NAME:CAST_ARROW
		TAB:	
		TAB:	
		NEWLINE:$\n
		list_def:
			parameters:
				name:
					NAME:CHANCE
				AS:as 
			quote:
				WILD:chance
		list_def:
			parameters:
				AS:as 
				name:
					NAME:DASH
			quote:
				WILD:-
		list_def:
			parameters:
				AS:as 
				name:
					NAME:CROSS
			regex:
				WILD:[xX]
		NEWLINE:$\n
		list_def:
			quote:
				WILD:=
			parameters:
				name:
					NAME:EQUALSIGN
				AS:as 
		NEWLINE:$\n
		list_def:
			regex:
				WILD:[a-zA-Z_][a-zA-Z0-9_]*
			parameters:
				AS:as 
				name:
					NAME:NAME
		list_def:
			quote:
				WILD:!
			parameters:
				AS:as 
				name:
					NAME:NOT
		list_def:
			regex:
				WILD:[<>][=]?
			parameters:
				AS:as 
				name:
					NAME:ORDINAL
		list_def:
			quote:
				WILD:,
			parameters:
				name:
					NAME:COMMA
				AS:as 
		list_def:
			parameters:
				AS:as 
				name:
					NAME:DOT
			quote:
				WILD:.
		list_def:
			parameters:
				AS:as 
				name:
					NAME:FLOAT
			regex:
				WILD:[-]?\\d+\\Q.\\E\\d+
		TAB:	
		NEWLINE:$\n
		NEWLINE:$\n
		TAB:	
		TAB:	
		NEWLINE:$\n
		TAB:	
		NEWLINE:$\n
		NEWLINE:$\n
		NEWLINE:$\n
		TAB:	
		TAB:	
		NEWLINE:$\n
		NEWLINE:$\n
		list_def:
			quote:
				WILD:|
			parameters:
				AS:as 
				name:
					NAME:OR
		NEWLINE:$\n
		list_def:
			parameters:
				AS:as 
				name:
					NAME:NULL
			quote:
				WILD:null
		TAB:	
		TAB:	
		NEWLINE:$\n
		listname:
			LISTNAME:generalToken-s
		NEWLINE:$\n
		NEWLINE:$\n
		list_def:
			quote:
				WILD:on
			parameters:
				name:
					NAME:ON
				AS:as 
		TAB:	
		NEWLINE:$\n
		NEWLINE:$\n
		TAB:	
		list_def:
			parameters:
				name:
					NAME:HAS
				AS:as 
			quote:
				WILD:has
		NEWLINE:$\n
		list_def:
			quote:
				WILD:*
			parameters:
				AS:as 
				name:
					NAME:MULTIPLY
		NEWLINE:$\n
		list_def:
			quote:
				WILD:;
			parameters:
				AS:as 
				name:
					NAME:SEMICOLON
		NEWLINE:$\n
		TAB:	
		TAB:	
		list_def:
			parameters:
				AS:as 
				name:
					NAME:NEWTABTABTAB
			quote:
				WILD:\n\t\t\t
		TAB:	
		list_def:
			parameters:
				AS:as 
				name:
					NAME:WHILE
			quote:
				WILD:while
		NEWLINE:$\n
		list_def:
			parameters:
				AS:as 
				name:
					NAME:FALSE
			quote:
				WILD:false
		NEWLINE:$\n
		NEWLINE:$\n
		TAB:	
		TAB:	
		NEWLINE:$\n
		list_def:
			quote:
				WILD:release
			parameters:
				AS:as 
				name:
					NAME:RELEASE
		TAB:	
		list_def:
			quote:
				WILD:&
			parameters:
				AS:as 
				name:
					NAME:AND
		TAB:	
		list_def:
			quote:
				WILD:..
			parameters:
				AS:as 
				name:
					NAME:DOTDOT
		TAB:	
		NEWLINE:$\n
		NEWLINE:$\n
		NEWLINE:$\n
		NEWLINE:$\n
		NEWLINE:$\n
		NEWLINE:$\n
		NEWLINE:$\n
		TAB:	
		TAB:	
		TAB:	
		list_def:
			quote:
				WILD:\n
			parameters:
				AS:as 
				name:
					NAME:NEWLINE
		NEWLINE:$\n
		TAB:	
		TAB:	
		list_def:
			parameters:
				name:
					NAME:PLUS
				AS:as 
			quote:
				WILD:+
		NEWLINE:$\n
		NEWLINE:$\n
		NEWLINE:$\n
		TAB:	
		list_def:
			parameters:
				name:
					NAME:FROM
				AS:as 
			quote:
				WILD:from
		TAB:	
		NEWLINE:$\n
		TAB:	
		list_def:
			regex:
				WILD:[-]?\\d+
			parameters:
				AS:as 
				name:
					NAME:INTEGER
		TAB:	
		NEWLINE:$\n
		list_def:
			parameters:
				name:
					NAME:THIS
				AS:as 
			quote:
				WILD:this
		TAB:	
		TAB:	
		TAB:	
		TAB:	
		TAB:	
		list_def:
			parameters:
				AS:as 
				name:
					NAME:PLUSEQUALS
			quote:
				WILD:+=
		TAB:	
		list_def:
			parameters:
				name:
					NAME:COLON
				AS:as 
			quote:
				WILD::
		TAB:	
		NEWLINE:$\n
		NEWLINE:$\n
		list_def:
			parameters:
				name:
					NAME:STAR
				AS:as 
			quote:
				WILD:*
		list_def:
			quote:
				WILD:in
			parameters:
				AS:as 
				name:
					NAME:IN
		NEWLINE:$\n
		NEWLINE:$\n
		TAB:	
		list_def:
			parameters:
				AS:as 
				name:
					NAME:NEWTABTAB
			quote:
				WILD:\n\t\t
		list_def:
			parameters:
				AS:as 
				name:
					NAME:ELSE
			quote:
				WILD:else
		list_def:
			parameters:
				name:
					NAME:NOTEQUALS
				AS:as 
			quote:
				WILD:!=
		list_def:
			parameters:
				AS:as 
				name:
					NAME:TRUE
			quote:
				WILD:true
		TAB:	
		list_def:
			quote:
				WILD:\n\t
			parameters:
				AS:as 
				name:
					NAME:NEWTAB
		NEWLINE:$\n
		list_def:
			parameters:
				name:
					NAME:DIVIDE
				AS:as 
			quote:
				WILD:/
		list_def:
			parameters:
				AS:as 
				name:
					NAME:MINUS
			quote:
				WILD:-
		NEWLINE:$\n
		TAB:	
		list_def:
			quote:
				WILD:==
			parameters:
				name:
					NAME:EQUALS
				AS:as 
		list_def:
			quote:
				WILD:->
			parameters:
				AS:as 
				name:
					NAME:ACCESS
		NEWLINE:$\n
		NEWLINE:$\n
		TAB:	
		list_def:
			quote:
				WILD:new
			parameters:
				name:
					NAME:NEW
				AS:as 
		NEWLINE:$\n
		list_def:
			quote:
				WILD:of
			parameters:
				name:
					NAME:OF
				AS:as 
		NEWLINE:$\n
		list_def:
			quote:
				WILD:return
			parameters:
				name:
					NAME:RETURN
				AS:as 
		list_def:
			quote:
				WILD:for
			parameters:
				name:
					NAME:FOR
				AS:as 
		NEWLINE:$\n
		TAB:	
		NEWLINE:$\n
		TAB:	
		TAB:	
		list_def:
			quote:
				WILD:%
			parameters:
				AS:as 
				name:
					NAME:PERCENT
		list_def:
			parameters:
				name:
					NAME:MINUSEQUALS
				AS:as 
			quote:
				WILD:-=
		TAB:	
		TAB:	
		TAB:	
		TAB:	
	NEWLINE:$\n
	rule:
		definition:
			choice:
				NEWLINE:$\n
				TAB:	
				definition:
					choice:
						TAB:	
						definition:
							chain:
								atom:
									terminal:
										listsToken:
											LISTNAME:while_statement
							choice:
								TAB:	
								definition:
									chain:
										atom:
											terminal:
												listsToken:
													LISTNAME:for_statement
									choice:
										NEWLINE:$\n
										definition:
											chain:
												atom:
													terminal:
														listsToken:
															LISTNAME:variable_declaration
											choice:
												TAB:	
												definition:
													choice:
													chain:
														atom:
															terminal:
																listsToken:
																	LISTNAME:statement
												NEWLINE:$\n
										TAB:	
								NEWLINE:$\n
						NEWLINE:$\n
					chain:
						atom:
							terminal:
								listsToken:
									LISTNAME:if_statement
			chain:
				atom:
					terminal:
						listsToken:
							LISTNAME:return_statement
		NEWLINE:$\n
		TAB:	
		rulename:
			NAME:body_element
	NEWLINE:$\n
	NEWLINE:$\n
	rule:
		TAB:	
		definition:
			choice:
			chain:
				atom:
					multiple:
						option:
							MANY:*
						definition:
							chain:
								atom:
									braced:
										definition:
											choice:
											chain:
												atom:
													terminal:
														listsToken:
															LISTNAME:operator
												atom:
													multiple:
														option:
															MANY:*
														definition:
															chain:
																atom:
																	terminal:
																		listsToken:
																			LISTNAME:NEWLINE
															choice:
												atom:
													terminal:
														listsToken:
															LISTNAME:statement
							choice:
				atom:
					multiple:
						option:
							OPTIONAL:?
						definition:
							choice:
							chain:
								atom:
									terminal:
										listsToken:
											LISTNAME:NOT
				atom:
					terminal:
						listsToken:
							LISTNAME:variable_call
		rulename:
			NAME:statement
		NEWLINE:$\n
	NEWLINE:$\n
	NEWLINE:$\n
	rule:
		rulename:
			NAME:variable_call
		TAB:	
		definition:
			chain:
				atom:
					terminal:
						listsToken:
							LISTNAME:range
					parameters:
						AS:as 
						name:
							NAME:range
			choice:
				TAB:	
				NEWLINE:$\n
				definition:
					choice:
						NEWLINE:$\n
						TAB:	
						definition:
							choice:
								NEWLINE:$\n
								TAB:	
								definition:
									chain:
										atom:
											braced:
												definition:
													chain:
														atom:
															terminal:
																listsToken:
																	LISTNAME:method
													choice:
														definition:
															chain:
																atom:
																	parameters:
																		name:
																			NAME:variableName
																		AS:as 
																	terminal:
																		listsToken:
																			LISTNAME:NAME
															choice:
																PIPE:|
																definition:
																	chain:
																		atom:
																			terminal:
																				listsToken:
																					LISTNAME:QUOTE
																	choice:
														PIPE:|
										atom:
											multiple:
												option:
													MANY:*
												definition:
													choice:
													chain:
														atom:
															braced:
																definition:
																	chain:
																		atom:
																			terminal:
																				listsToken:
																					LISTNAME:DOT
																		atom:
																			braced:
																				definition:
																					choice:
																						PIPE:|
																						definition:
																							chain:
																								atom:
																									parameters:
																										AS:as 
																										name:
																											NAME:variableName
																									terminal:
																										listsToken:
																											LISTNAME:NAME
																							choice:
																					chain:
																						atom:
																							terminal:
																								listsToken:
																									LISTNAME:method
																	choice:
									choice:
							chain:
								atom:
									terminal:
										listsToken:
											LISTNAME:BRACED_STATEMENT
									parameters:
										name:
											NAME:braced
										AS:as 
					chain:
						atom:
							parameters:
								name:
									NAME:exact
								AS:as 
							braced:
								definition:
									choice:
										definition:
											choice:
												definition:
													choice:
														definition:
															choice:
																definition:
																	choice:
																	chain:
																		atom:
																			terminal:
																				listsToken:
																					LISTNAME:INTEGER
																PIPE:|
															chain:
																atom:
																	terminal:
																		listsToken:
																			LISTNAME:FLOAT
														PIPE:|
													chain:
														atom:
															terminal:
																listsToken:
																	LISTNAME:NULL
												PIPE:|
											chain:
												atom:
													terminal:
														listsToken:
															LISTNAME:FALSE
										PIPE:|
									chain:
										atom:
											terminal:
												listsToken:
													LISTNAME:TRUE
		NEWLINE:$\n
	NEWLINE:$\n
	NEWLINE:$\n
	rule:
		NEWLINE:$\n
		rulename:
			NAME:return_statement
		definition:
			choice:
			chain:
				atom:
					terminal:
						listsToken:
							LISTNAME:statement
				atom:
					terminal:
						listsToken:
							LISTNAME:RETURN
		TAB:	
	NEWLINE:$\n
	NEWLINE:$\n
	NEWLINE:$\n
	rule:
		definition:
			choice:
			chain:
				atom:
					terminal:
						listsToken:
							LISTNAME:NAME
					parameters:
						name:
							NAME:variableName
						AS:as 
				atom:
					terminal:
						listsToken:
							LISTNAME:type_name
		rulename:
			NAME:variable_header
		TAB:	
		NEWLINE:$\n
	rule:
		NEWLINE:$\n
		silence:
			SILENCE:is silent
		definition:
			choice:
				TAB:	
				NEWLINE:$\n
				definition:
					chain:
						atom:
							terminal:
								listsToken:
									LISTNAME:INTEGER
					choice:
			chain:
				atom:
					terminal:
						listsToken:
							LISTNAME:FLOAT
		TAB:	
		rulename:
			NAME:num
	NEWLINE:$\n
	rule:
		NEWLINE:$\n
		rulename:
			NAME:variable_declaration
		definition:
			chain:
				atom:
					multiple:
						option:
							OPTIONAL:?
						definition:
							choice:
							chain:
								atom:
									braced:
										definition:
											chain:
												atom:
													terminal:
														listsToken:
															LISTNAME:EQUALSIGN
												atom:
													terminal:
														listsToken:
															LISTNAME:statement
											choice:
				atom:
					terminal:
						listsToken:
							LISTNAME:variable_header
			choice:
		TAB:	
	list_rule:
		listType:
			NAME:CharitableBraced
		list_def:
			parameters:
				AS:as 
				name:
					NAME:description
			WITH:with 
			parameter:
				definition:
					chain:
						atom:
							terminal:
								listsToken:
									LISTNAME:WILD
							parameters:
								name:
									NAME:description
								AS:as 
					choice:
			regex:
				WILD:,\n
		NEWLINE:$\n
		ARE:are 
		TAB:	
		listname:
			LISTNAME:generalAltBrace-s
		NEWLINE:$\n
	NEWLINE:$\n
	NEWLINE:$\n
	NEWLINE:$\n
	NEWLINE:$\n
	rule:
		rulename:
			NAME:range
		definition:
			choice:
			chain:
				atom:
					terminal:
						listsToken:
							LISTNAME:num
					parameters:
						name:
							NAME:left
						AS:as 
				atom:
					braced:
						definition:
							choice:
							chain:
								atom:
									braced:
										definition:
											chain:
												atom:
													terminal:
														listsToken:
															LISTNAME:DOTDOT
											choice:
												PIPE:|
												definition:
													choice:
													chain:
														atom:
															terminal:
																listsToken:
																	LISTNAME:DASH
								atom:
									parameters:
										AS:as 
										name:
											NAME:right
									terminal:
										listsToken:
											LISTNAME:num
				atom:
					multiple:
						definition:
							choice:
							chain:
								atom:
									terminal:
										listsToken:
											LISTNAME:PERCENT
									parameters:
										name:
											NAME:percent
										AS:as 
						option:
							OPTIONAL:?
		silence:
			SILENCE:is silent
		NEWLINE:$\n
		TAB:	
	NEWLINE:$\n
	NEWLINE:$\n
	list_rule:
		NEWLINE:$\n
		list_def:
			WITH:with 
			regex:
				WILD:(,)
			parameters:
				name:
					NAME:METHOD_ARGUMENTS
				AS:as 
			parameter:
				definition:
					choice:
					chain:
						atom:
							multiple:
								definition:
									choice:
									chain:
										atom:
											braced:
												definition:
													chain:
														atom:
															terminal:
																listsToken:
																	LISTNAME:COMMA
														atom:
															multiple:
																definition:
																	choice:
																	chain:
																		atom:
																			terminal:
																				listsToken:
																					LISTNAME:NEWLINE
																option:
																	MANY:*
														atom:
															terminal:
																listsToken:
																	LISTNAME:statement
													choice:
								option:
									MANY:*
						atom:
							multiple:
								option:
									MANY:*
								definition:
									choice:
									chain:
										atom:
											terminal:
												listsToken:
													LISTNAME:NEWLINE
						atom:
							multiple:
								option:
									OPTIONAL:?
								definition:
									chain:
										atom:
											terminal:
												listsToken:
													LISTNAME:statement
									choice:
		NEWLINE:$\n
		TAB:	
		list_def:
			WITH:with 
			parameter:
				definition:
					choice:
					chain:
						atom:
							multiple:
								definition:
									chain:
										atom:
											braced:
												definition:
													choice:
													chain:
														atom:
															terminal:
																listsToken:
																	LISTNAME:variable_header
														atom:
															multiple:
																definition:
																	chain:
																		atom:
																			braced:
																				definition:
																					chain:
																						atom:
																							terminal:
																								listsToken:
																									LISTNAME:variable_header
																						atom:
																							terminal:
																								listsToken:
																									LISTNAME:COMMA
																					choice:
																	choice:
																option:
																	MANY:*
									choice:
								option:
									OPTIONAL:?
			regex:
				WILD:(,)
			parameters:
				name:
					NAME:METHOD_PARAMETERS
				AS:as 
		list_def:
			WITH:with 
			parameters:
				name:
					NAME:BRACED_STATEMENT
				AS:as 
			regex:
				WILD:(,)
			parameter:
				definition:
					chain:
						atom:
							terminal:
								listsToken:
									LISTNAME:statement
					choice:
		NEWLINE:$\n
		TAB:	
		listType:
			NAME:Braced
		ARE:are 
		NEWLINE:$\n
		TAB:	
		TAB:	
		list_def:
			WITH:with 
			parameter:
				definition:
					choice:
					chain:
						atom:
							multiple:
								option:
									MANY:*
								definition:
									choice:
									chain:
										atom:
											braced:
												definition:
													choice:
														definition:
															chain:
																atom:
																	terminal:
																		listsToken:
																			LISTNAME:COMMENTS
															choice:
																definition:
																	chain:
																		atom:
																			terminal:
																				listsToken:
																					LISTNAME:body_element
																	choice:
																PIPE:|
														PIPE:|
													chain:
														atom:
															terminal:
																listsToken:
																	LISTNAME:NEWLINE
			regex:
				WILD:{,}
			parameters:
				AS:as 
				name:
					NAME:BODY
		listname:
			LISTNAME:generalBrace-s
		list_def:
			parameter:
				definition:
					chain:
						atom:
							parameters:
								name:
									NAME:quote
								AS:as 
							terminal:
								listsToken:
									LISTNAME:WILD
					choice:
			regex:
				WILD:\",\"
			WITH:with 
			parameters:
				AS:as 
				name:
					NAME:QUOTE
		TAB:	
		NEWLINE:$\n
		NEWLINE:$\n
	NEWLINE:$\n
	rule:
		TAB:	
		rulename:
			NAME:has_chance
		NEWLINE:$\n
		definition:
			choice:
			chain:
				atom:
					terminal:
						listsToken:
							LISTNAME:num
				atom:
					terminal:
						listsToken:
							LISTNAME:PERCENT
				atom:
					terminal:
						listsToken:
							LISTNAME:CHANCE
IMPORT_RULE:
	NEWLINE:$\n
	NEWLINE:$\n
	list_rule:
		ARE:are 
		listname:
			LISTNAME:defined_class_name-s
		listType:
			NAME:empty
		NEWLINE:$\n
	list_rule:
		listname:
			LISTNAME:classBrace-s
		NEWLINE:$\n
		listType:
			NAME:Braced
		TAB:	
		NEWLINE:$\n
		list_def:
			WITH:with 
			parameters:
				AS:as 
				name:
					NAME:CLASS_FILE
			parameter:
				definition:
					choice:
					chain:
						atom:
							parameters:
								name:
									NAME:class_file_name
								AS:as 
							terminal:
								listsToken:
									LISTNAME:WILD
			regex:
				WILD:,.
		ARE:are 
	NEWLINE:$\n
	comment:#CLASSES$\n
	list_rule:
		TAB:	
		NEWLINE:$\n
		ARE:are 
		list_def:
			parameter:
				definition:
					choice:
					chain:
						atom:
							terminal:
								listsToken:
									LISTNAME:CLASS_FILE
						atom:
							terminal:
								listsToken:
									LISTNAME:DEF
			regex:
				WILD:><<\"defs/\",class_file_name,\".def\">>\n
			parser:
				definition:
					choice:
					chain:
						atom:
							multiple:
								definition:
									choice:
									chain:
										atom:
											braced:
												definition:
													chain:
														atom:
															terminal:
																listsToken:
																	LISTNAME:NEWLINE
													choice:
														definition:
															chain:
																atom:
																	terminal:
																		listsToken:
																			LISTNAME:COMMENTS
															choice:
																PIPE:|
																definition:
																	choice:
																	chain:
																		atom:
																			terminal:
																				listsToken:
																					LISTNAME:class_declaration
														PIPE:|
								option:
									MANY:*
			parameters:
				AS:as 
				name:
					NAME:IMPORT_CLASSES
			FROM:from
			WITH:with 
		NEWLINE:$\n
		listname:
			LISTNAME:classImport-s
		listType:
			NAME:Import
	rule:
		rulename:
			NAME:class_declaration
		TAB:	
		definition:
			chain:
				atom:
					parameters:
						AS:as 
						name:
							NAME:className
					terminal:
						listsToken:
							LISTNAME:NAME
				atom:
					multiple:
						option:
							PLUS:+
						definition:
							choice:
							chain:
								atom:
									braced:
										definition:
											chain:
												atom:
													terminal:
														listsToken:
															LISTNAME:NEWTAB
												atom:
													terminal:
														listsToken:
															LISTNAME:class_element
											choice:
			choice:
		NEWLINE:$\n
	NEWLINE:$\n
	rule:
		definition:
			chain:
				atom:
					terminal:
						listsToken:
							LISTNAME:NAME
				atom:
					terminal:
						listsToken:
							LISTNAME:BODY
					parameters:
						AS:as 
						name:
							NAME:body
				atom:
					terminal:
						listsToken:
							LISTNAME:METHOD_PARAMETERS
			choice:
				definition:
					chain:
						atom:
							terminal:
								listsToken:
									LISTNAME:variable_declaration
					choice:
						TAB:	
						NEWLINE:$\n
						definition:
							choice:
							chain:
								atom:
									multiple:
										option:
											PLUS:+
										definition:
											chain:
												atom:
													terminal:
														listsToken:
															LISTNAME:NEWLINE
											choice:
				TAB:	
				NEWLINE:$\n
		NEWLINE:$\n
		TAB:	
		rulename:
			NAME:class_element
	NEWLINE:$\n
	NEWLINE:$\n
	list_rule:
		NEWLINE:$\n
		listname:
			LISTNAME:classToken-s
		list_def:
			parameters:
				AS:as 
				name:
					NAME:DEF
			quote:
				WILD:def
		TAB:	
		NEWLINE:$\n
IMPORT_RULE:
	list_rule:
		NEWLINE:$\n
		TAB:	
		TAB:	
		NEWLINE:$\n
		list_def:
			parameters:
				AS:as 
				name:
					NAME:NEWTAB
			quote:
				WILD:\n\t
		NEWLINE:$\n
		TAB:	
		list_def:
			parameters:
				AS:as 
				name:
					NAME:EVTS
			quote:
				WILD:evts
		NEWLINE:$\n
		listname:
			LISTNAME:eventToken-s
		list_def:
			quote:
				WILD:event
			parameters:
				AS:as 
				name:
					NAME:EVENT
		NEWLINE:$\n
		list_def:
			regex:
				WILD:[a-zA-Z_][a-zA-Z0-9_]*
			parameters:
				AS:as 
				name:
					NAME:NAME
		TAB:	
		TAB:	
		TAB:	
		list_def:
			parameters:
				name:
					NAME:WILD
				AS:as 
			regex:
				WILD:.*
		NEWLINE:$\n
		list_def:
			quote:
				WILD:\n
			parameters:
				AS:as 
				name:
					NAME:NEWLINE
		NEWLINE:$\n
	rule:
		NEWLINE:$\n
		definition:
			choice:
			chain:
				atom:
					terminal:
						listsToken:
							LISTNAME:NAME
					parameters:
						IN:in
						AS:as 
						list:
							LISTNAME:event_names
						name:
							NAME:eventName
				atom:
					multiple:
						option:
							MANY:*
						definition:
							choice:
							chain:
								atom:
									braced:
										definition:
											choice:
												definition:
													choice:
														definition:
															choice:
															chain:
																atom:
																	terminal:
																		listsToken:
																			LISTNAME:NEWLINE
														PIPE:|
													chain:
														atom:
															parameters:
																AS:as 
																name:
																	NAME:parameter
															braced:
																definition:
																	chain:
																		atom:
																			terminal:
																				listsToken:
																					LISTNAME:NEWTAB
																		atom:
																			terminal:
																				listsToken:
																					LISTNAME:NAME
																			parameters:
																				name:
																					NAME:name
																				AS:as 
																		atom:
																			terminal:
																				listsToken:
																					LISTNAME:type_name
																	choice:
												PIPE:|
											chain:
												atom:
													terminal:
														listsToken:
															LISTNAME:COMMENTS
		rulename:
			NAME:event_declaration
		TAB:	
	list_rule:
		ARE:are 
		listname:
			LISTNAME:event_name-s
		listType:
			NAME:empty
		NEWLINE:$\n
	NEWLINE:$\n
	list_rule:
		TAB:	
		ARE:are 
		list_def:
			parameter:
				definition:
					chain:
						atom:
							terminal:
								listsToken:
									LISTNAME:EVENT_FILE
						atom:
							terminal:
								listsToken:
									LISTNAME:EVTS
					choice:
			WITH:with 
			parser:
				definition:
					choice:
					chain:
						atom:
							multiple:
								definition:
									chain:
										atom:
											braced:
												definition:
													choice:
														PIPE:|
														definition:
															chain:
																atom:
																	terminal:
																		listsToken:
																			LISTNAME:COMMENTS
															choice:
																definition:
																	chain:
																		atom:
																			terminal:
																				listsToken:
																					LISTNAME:event_declaration
																	choice:
																PIPE:|
													chain:
														atom:
															terminal:
																listsToken:
																	LISTNAME:NEWLINE
									choice:
								option:
									MANY:*
			parameters:
				AS:as 
				name:
					NAME:IMPORT_EVENT
			FROM:from
			regex:
				WILD:><<\"events/\",event_file_name,\".evts\">>\n
		listType:
			NAME:Import
		listname:
			LISTNAME:eventImport-s
		NEWLINE:$\n
		NEWLINE:$\n
	list_rule:
		listType:
			NAME:Braced
		NEWLINE:$\n
		TAB:	
		listname:
			LISTNAME:eventBrace-s
		NEWLINE:$\n
		ARE:are 
		list_def:
			parameter:
				definition:
					choice:
					chain:
						atom:
							terminal:
								listsToken:
									LISTNAME:WILD
							parameters:
								name:
									NAME:event_file_name
								AS:as 
			WITH:with 
			parameters:
				name:
					NAME:EVENT_FILE
				AS:as 
			regex:
				WILD:,.
	NEWLINE:$\n
	comment:#EVENTS$\n
IMPORT_RULE:
	NEWLINE:$\n
	NEWLINE:$\n
	list_rule:
		NEWLINE:$\n
		NEWLINE:$\n
		listType:
			NAME:Import
		listname:
			LISTNAME:stateImport-s
		TAB:	
		ARE:are 
		list_def:
			parser:
				definition:
					chain:
						atom:
							multiple:
								option:
									MANY:*
								definition:
									chain:
										atom:
											braced:
												definition:
													choice:
														PIPE:|
														definition:
															choice:
																definition:
																	chain:
																		atom:
																			terminal:
																				listsToken:
																					LISTNAME:state_declaration
																	choice:
																PIPE:|
															chain:
																atom:
																	terminal:
																		listsToken:
																			LISTNAME:COMMENTS
													chain:
														atom:
															terminal:
																listsToken:
																	LISTNAME:NEWLINE
									choice:
					choice:
			parameter:
				definition:
					chain:
						atom:
							terminal:
								listsToken:
									LISTNAME:STATES
						atom:
							terminal:
								listsToken:
									LISTNAME:STATES_FILE
					choice:
			regex:
				WILD:><<\"states/\",states_file_name,\".states\">>\n
			FROM:from
			WITH:with 
			parameters:
				name:
					NAME:IMPORT_STATES
				AS:as 
	list_rule:
		TAB:	
		list_def:
			regex:
				WILD:,\n
			parameter:
				definition:
					choice:
					chain:
						atom:
							parameters:
								AS:as 
								name:
									NAME:toolTipLine
							terminal:
								listsToken:
									LISTNAME:WILD
			parameters:
				name:
					NAME:TOOL_TIP_LINE
				AS:as 
			WITH:with 
		TAB:	
		listname:
			LISTNAME:stateAltBrace-s
		ARE:are 
		listType:
			NAME:CharitableBraced
		NEWLINE:$\n
		NEWLINE:$\n
		list_def:
			WITH:with 
			parameters:
				name:
					NAME:CHOICE_NAME
				AS:as 
			parameter:
				definition:
					chain:
						atom:
							terminal:
								listsToken:
									LISTNAME:WILD
							parameters:
								AS:as 
								name:
									NAME:choiceName
					choice:
			regex:
				WILD:,\n
		NEWLINE:$\n
	NEWLINE:$\n
	rule:
		rulename:
			NAME:choice_element
		TAB:	
		NEWLINE:$\n
		silence:
			SILENCE:is silent
		definition:
			chain:
				atom:
					terminal:
						listsToken:
							LISTNAME:TOOL_TIP
				atom:
					multiple:
						option:
							PLUS:+
						definition:
							chain:
								atom:
									braced:
										definition:
											choice:
											chain:
												atom:
													multiple:
														option:
															PLUS:+
														definition:
															choice:
															chain:
																atom:
																	braced:
																		definition:
																			chain:
																				atom:
																					terminal:
																						listsToken:
																							LISTNAME:TOOL_TIP_LINE
																			choice:
																				PIPE:|
																				definition:
																					choice:
																					chain:
																						atom:
																							multiple:
																								option:
																									PLUS:+
																								definition:
																									chain:
																										atom:
																											terminal:
																												listsToken:
																													LISTNAME:NEWLINE
																									choice:
												atom:
													terminal:
														listsToken:
															LISTNAME:NEWTABTAB
							choice:
			choice:
				NEWLINE:$\n
				TAB:	
				definition:
					choice:
						NEWLINE:$\n
						TAB:	
						definition:
							chain:
								atom:
									multiple:
										option:
											PLUS:+
										definition:
											chain:
												atom:
													terminal:
														listsToken:
															LISTNAME:NEWLINE
											choice:
							choice:
					chain:
						atom:
							terminal:
								listsToken:
									LISTNAME:entry_element
	list_rule:
		list_def:
			parameter:
				definition:
					chain:
						atom:
							terminal:
								listsToken:
									LISTNAME:WILD
							parameters:
								AS:as 
								name:
									NAME:states_file_name
					choice:
			regex:
				WILD:,.
			WITH:with 
			parameters:
				AS:as 
				name:
					NAME:STATES_FILE
		listname:
			LISTNAME:stateBrace-s
		ARE:are 
		listType:
			NAME:Braced
		NEWLINE:$\n
		TAB:	
		NEWLINE:$\n
		list_def:
			WITH:with 
			parameters:
				name:
					NAME:TRANSITION_ELEMENTS
				AS:as 
			parameter:
				definition:
					chain:
						atom:
							multiple:
								definition:
									choice:
									chain:
										atom:
											braced:
												definition:
													choice:
														PIPE:|
														definition:
															choice:
															chain:
																atom:
																	terminal:
																		listsToken:
																			LISTNAME:entry_element
													chain:
														atom:
															multiple:
																definition:
																	chain:
																		atom:
																			terminal:
																				listsToken:
																					LISTNAME:NEWLINE
																	choice:
																option:
																	PLUS:+
								option:
									MANY:*
					choice:
			regex:
				WILD:{,}
		TAB:	
		NEWLINE:$\n
	rule:
		NEWLINE:$\n
		TAB:	
		definition:
			chain:
				atom:
					multiple:
						definition:
							choice:
							chain:
								atom:
									braced:
										definition:
											choice:
											chain:
												atom:
													terminal:
														listsToken:
															LISTNAME:state_element
												atom:
													terminal:
														listsToken:
															LISTNAME:NEWTAB
						option:
							MANY:*
				atom:
					terminal:
						listsToken:
							LISTNAME:NAME
					parameters:
						AS:as 
						name:
							NAME:stateName
			choice:
		rulename:
			NAME:state_declaration
	NEWLINE:$\n
	NEWLINE:$\n
	rule:
		NEWLINE:$\n
		definition:
			chain:
				atom:
					multiple:
						definition:
							chain:
								atom:
									braced:
										definition:
											choice:
											chain:
												atom:
													terminal:
														listsToken:
															LISTNAME:entry_element
												atom:
													terminal:
														listsToken:
															LISTNAME:NEWTABTAB
							choice:
						option:
							MANY:*
				atom:
					braced:
						definition:
							choice:
								definition:
									chain:
										atom:
											terminal:
												listsToken:
													LISTNAME:EXIT
									choice:
								PIPE:|
							chain:
								atom:
									terminal:
										listsToken:
											LISTNAME:ENTER
			choice:
				definition:
					choice:
						NEWLINE:$\n
						TAB:	
						definition:
							chain:
								atom:
									multiple:
										option:
											PLUS:+
										definition:
											chain:
												atom:
													terminal:
														listsToken:
															LISTNAME:NEWLINE
											choice:
							choice:
					chain:
						atom:
							multiple:
								definition:
									chain:
										atom:
											braced:
												definition:
													choice:
													chain:
														atom:
															multiple:
																option:
																	MANY:*
																definition:
																	chain:
																		atom:
																			terminal:
																				listsToken:
																					LISTNAME:NEWLINE
																	choice:
														atom:
															multiple:
																option:
																	MANY:*
																definition:
																	chain:
																		atom:
																			terminal:
																				listsToken:
																					LISTNAME:NEWLINE
																	choice:
														atom:
															terminal:
																listsToken:
																	LISTNAME:boolean_statement
														atom:
															terminal:
																listsToken:
																	LISTNAME:COLON
														atom:
															terminal:
																listsToken:
																	LISTNAME:IF
									choice:
								option:
									OPTIONAL:?
						atom:
							terminal:
								listsToken:
									LISTNAME:CHOICE_NAME
						atom:
							multiple:
								definition:
									choice:
									chain:
										atom:
											braced:
												definition:
													choice:
													chain:
														atom:
															terminal:
																listsToken:
																	LISTNAME:NEWTABTAB
														atom:
															terminal:
																listsToken:
																	LISTNAME:choice_element
								option:
									MANY:*
				NEWLINE:$\n
				TAB:	
		TAB:	
		rulename:
			NAME:state_element
	comment:#MAP$\n
	list_rule:
		TAB:	
		NEWLINE:$\n
		NEWLINE:$\n
		list_def:
			parameters:
				AS:as 
				name:
					NAME:TRANSITION_ARROW
			quote:
				WILD:->
		TAB:	
		NEWLINE:$\n
		list_def:
			parameters:
				AS:as 
				name:
					NAME:TOOL_TIP
			regex:
				WILD:[tT]ool( )*[tT]ips?
		TAB:	
		list_def:
			parameters:
				AS:as 
				name:
					NAME:ENTER
			quote:
				WILD:Enter
		listname:
			LISTNAME:stateToken-s
		NEWLINE:$\n
		NEWLINE:$\n
		list_def:
			quote:
				WILD:Exit
			parameters:
				AS:as 
				name:
					NAME:EXIT
		list_def:
			parameters:
				name:
					NAME:STATES
				AS:as 
			quote:
				WILD:states
		TAB:	
		NEWLINE:$\n
		TAB:	
	NEWLINE:$\n
	NEWLINE:$\n
	rule:
		NEWLINE:$\n
		rulename:
			NAME:entry_element
		definition:
			chain:
				atom:
					multiple:
						definition:
							chain:
								atom:
									terminal:
										listsToken:
											LISTNAME:TRANSITION_ELEMENTS
							choice:
						option:
							OPTIONAL:?
				atom:
					multiple:
						option:
							PLUS:+
						definition:
							choice:
							chain:
								atom:
									braced:
										definition:
											choice:
											chain:
												atom:
													parameters:
														name:
															NAME:transitionStateName
														AS:as 
													terminal:
														listsToken:
															LISTNAME:NAME
												atom:
													terminal:
														listsToken:
															LISTNAME:TRANSITION_ARROW
			choice:
				definition:
					choice:
						NEWLINE:$\n
						TAB:	
						definition:
							chain:
								atom:
									terminal:
										listsToken:
											LISTNAME:EQUALSIGN
								atom:
									parameters:
										AS:as 
										name:
											NAME:newVariable
									terminal:
										listsToken:
											LISTNAME:NAME
								atom:
									terminal:
										listsToken:
											LISTNAME:PLUS
								atom:
									multiple:
										definition:
											chain:
												atom:
													parameters:
														AS:as 
														name:
															NAME:variableName
													terminal:
														listsToken:
															LISTNAME:NAME
											choice:
										option:
											OPTIONAL:?
								atom:
									terminal:
										listsToken:
											LISTNAME:statement
							choice:
								definition:
									chain:
										atom:
											multiple:
												definition:
													choice:
													chain:
														atom:
															parameters:
																AS:as 
																name:
																	NAME:variableName
															terminal:
																listsToken:
																	LISTNAME:NAME
												option:
													OPTIONAL:?
										atom:
											braced:
												definition:
													choice:
														definition:
															chain:
																atom:
																	terminal:
																		listsToken:
																			LISTNAME:statement
															choice:
														PIPE:|
													chain:
														atom:
															parameters:
																AS:as 
																name:
																	NAME:removeVariable
															terminal:
																listsToken:
																	LISTNAME:NAME
										atom:
											terminal:
												listsToken:
													LISTNAME:MINUS
									choice:
										definition:
											chain:
												atom:
													terminal:
														listsToken:
															LISTNAME:statement
											choice:
												NEWLINE:$\n
												definition:
													choice:
													chain:
														atom:
															multiple:
																definition:
																	choice:
																	chain:
																		atom:
																			terminal:
																				listsToken:
																					LISTNAME:NEWLINE
																option:
																	PLUS:+
												TAB:	
										NEWLINE:$\n
										TAB:	
								TAB:	
								NEWLINE:$\n
					chain:
						atom:
							terminal:
								listsToken:
									LISTNAME:EQUASIGN
						atom:
							terminal:
								listsToken:
									LISTNAME:statement
						atom:
							parameters:
								AS:as 
								name:
									NAME:variableName
							terminal:
								listsToken:
									LISTNAME:NAME
				NEWLINE:$\n
				TAB:	
		TAB:	
	NEWLINE:$\n
	NEWLINE:$\n
	NEWLINE:$\n
NEWLINE:$\n
list_rule:
	list_def:
		regex:
			WILD:#,#
		parameter:
			definition:
				chain:
					atom:
						terminal:
							listsToken:
								LISTNAME:WILD
						parameters:
							AS:as 
							name:
								NAME:comment
				choice:
		parameters:
			name:
				NAME:COMMENTS
			AS:as 
		WITH:with 
	ARE:are 
	listType:
		NAME:Braced
	NEWLINE:$\n
	listname:
		LISTNAME:comment-s
	TAB:	
	NEWLINE:$\n
NEWLINE:$\n
IMPORT_RULE:
	list_rule:
		ARE:are 
		NEWLINE:$\n
		NEWLINE:$\n
		TAB:	
		listname:
			LISTNAME:guiImport-s
		listType:
			NAME:Import
		list_def:
			regex:
				WILD:><<\"gui/images/\",image_file_name,\".imgs\">>\n
			FROM:from
			parameter:
				definition:
					chain:
						atom:
							terminal:
								listsToken:
									LISTNAME:IMAGE_FILE
						atom:
							terminal:
								listsToken:
									LISTNAME:IMGS
					choice:
			parser:
				definition:
					choice:
					chain:
						atom:
							multiple:
								option:
									MANY:*
								definition:
									choice:
									chain:
										atom:
											braced:
												definition:
													chain:
														atom:
															terminal:
																listsToken:
																	LISTNAME:NEWLINE
													choice:
														definition:
															chain:
																atom:
																	terminal:
																		listsToken:
																			LISTNAME:COMMENTS
															choice:
																definition:
																	chain:
																		atom:
																			terminal:
																				listsToken:
																					LISTNAME:image_declaration
																	choice:
																PIPE:|
														PIPE:|
			parameters:
				AS:as 
				name:
					NAME:IMPORT_IMAGES
			WITH:with 
	rule:
		rulename:
			NAME:image_declaration
		NEWLINE:$\n
		TAB:	
		definition:
			chain:
				atom:
					terminal:
						listsToken:
							LISTNAME:IMAGE_FILE
				atom:
					multiple:
						option:
							OPTIONAL:?
						definition:
							choice:
							chain:
								atom:
									braced:
										definition:
											chain:
												atom:
													multiple:
														option:
															OPTIONAL:?
														definition:
															chain:
																atom:
																	braced:
																		definition:
																			choice:
																			chain:
																				atom:
																					terminal:
																						listsToken:
																							LISTNAME:CROSS
																				atom:
																					terminal:
																						listsToken:
																							LISTNAME:INTEGER
																					parameters:
																						AS:as 
																						name:
																							NAME:height
															choice:
												atom:
													parameters:
														AS:as 
														name:
															NAME:width
													terminal:
														listsToken:
															LISTNAME:INTEGER
											choice:
									parameters:
										name:
											NAME:dimensions
										AS:as 
				atom:
					terminal:
						listsToken:
							LISTNAME:COLON
				atom:
					terminal:
						listsToken:
							LISTNAME:image_extension
				atom:
					terminal:
						listsToken:
							LISTNAME:NAME
					parameters:
						AS:as 
						name:
							NAME:imageId
			choice:
	list_rule:
		NEWLINE:$\n
		NEWLINE:$\n
		ARE:are 
		list_def:
			regex:
				WILD:,.
			WITH:with 
			parameter:
				definition:
					chain:
						atom:
							parameters:
								AS:as 
								name:
									NAME:image_file_name
							terminal:
								listsToken:
									LISTNAME:WILD
					choice:
			parameters:
				AS:as 
				name:
					NAME:IMAGE_FILE
		listname:
			LISTNAME:guiBrace-s
		listType:
			NAME:Braced
		TAB:	
	list_rule:
		TAB:	
		TAB:	
		NEWLINE:$\n
		list_def:
			parameters:
				AS:as 
				name:
					NAME:JPEG
			quote:
				WILD:jpeg
		NEWLINE:$\n
		TAB:	
		list_def:
			quote:
				WILD:png
			parameters:
				name:
					NAME:PNG
				AS:as 
		NEWLINE:$\n
		NEWLINE:$\n
		TAB:	
		list_def:
			quote:
				WILD:imgs
			parameters:
				name:
					NAME:IMGS
				AS:as 
		TAB:	
		list_def:
			regex:
				WILD:.*
			parameters:
				AS:as 
				name:
					NAME:WILD
		NEWLINE:$\n
		TAB:	
		listname:
			LISTNAME:guiToken-s
		list_def:
			regex:
				WILD:[a-zA-Z_][a-zA-Z0-9_]*
			parameters:
				name:
					NAME:NAME
				AS:as 
		list_def:
			parameters:
				AS:as 
				name:
					NAME:BMP
			quote:
				WILD:bmp
		NEWLINE:$\n
		NEWLINE:$\n
	rule:
		rulename:
			NAME:image_extension
		definition:
			chain:
				atom:
					terminal:
						listsToken:
							LISTNAME:PNG
			choice:
				PIPE:|
				definition:
					chain:
						atom:
							terminal:
								listsToken:
									LISTNAME:JPEG
					choice:
						PIPE:|
						definition:
							choice:
							chain:
								atom:
									terminal:
										listsToken:
											LISTNAME:BMP
		NEWLINE:$\n
		TAB:	
	NEWLINE:$\n
	list_rule:
		ARE:are 
		listname:
			LISTNAME:image_name-s
		listType:
			NAME:empty
		NEWLINE:$\n
	NEWLINE:$\n
	NEWLINE:$\n
	NEWLINE:$\n
	NEWLINE:$\n
	NEWLINE:$\n
	NEWLINE:$\n
	comment:#GUI$\n
	NEWLINE:$\n
rule:
	silence:
		SILENCE:is silent
	definition:
		chain:
			atom:
				multiple:
					option:
						MANY:*
					definition:
						choice:
						chain:
							atom:
								braced:
									definition:
										chain:
											atom:
												terminal:
													listsToken:
														LISTNAME:NEWLINE
										choice:
											definition:
												chain:
													atom:
														terminal:
															listsToken:
																LISTNAME:COMMENTS
												choice:
													definition:
														choice:
														chain:
															atom:
																terminal:
																	listsToken:
																		LISTNAME:import_any
													PIPE:|
											PIPE:|
		choice:
	TAB:	
	NEWLINE:$\n
	rulename:
		NAME:base
rule:
	NEWLINE:$\n
	rulename:
		NAME:import_any
	definition:
		choice:
			NEWLINE:$\n
			definition:
				choice:
					definition:
						choice:
							TAB:	
							definition:
								choice:
								chain:
									atom:
										terminal:
											listsToken:
												LISTNAME:IMPORT_STATES
							NEWLINE:$\n
						chain:
							atom:
								terminal:
									listsToken:
										LISTNAME:IMPORT_CLASSES
					NEWLINE:$\n
					TAB:	
				chain:
					atom:
						terminal:
							listsToken:
								LISTNAME:IMPORT_IMAGES
			TAB:	
		chain:
			atom:
				terminal:
					listsToken:
						LISTNAME:IMPORT_EVENT
	TAB:	<<